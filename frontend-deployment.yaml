apiVersion: v1
kind: Service
metadata:
  name: ec-frontend-svc
  namespace: ec-qas
  labels:
    application: ec-frontend
    stage: qas
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/version.txt'
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 80
  selector:
    application: ec-frontend
    stage: qas
status:
  loadBalancer: {}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ec-frontend-deploy
  namespace: ec-qas
  labels:
    application: ec-frontend
    stage: qas
spec:
  replicas: 1
  selector:
    matchLabels:
      application: ec-frontend
      stage: qas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        application: ec-frontend
        stage: qas
    spec:
    #  affinity:
    #    podAntiAffinity:
    #      requiredDuringSchedulingIgnoredDuringExecution:
    #        - labelSelector:
    #            matchExpressions:
    #              - key: application
    #                operator: In
    #                values:
    #                  - ec-frontend
    #              - key: stage
    #                operator: In
    #                values:
    #                  - qas
              # https://godleon.github.io/blog/Kubernetes/k8s-Assigning-Pod-to-Nodes/
              # topologyKey 的設定用意在於，如果有多個 pod 需要分配，並指定了 topologyKey，
              # 那 scheduler 在分配時就不可以(注意! 是不可以!)將多個 pod 放到帶有相同 value 的topologyKey(Label) 的 node 上
    #          topologyKey: kubernetes.io/hostname
    #    nodeAffinity:
    #      requiredDuringSchedulingIgnoredDuringExecution:
    #        nodeSelectorTerms:
    #          - matchExpressions:
    #              - key: it.mdev.project/e-procurement
    #                operator: In
    #                values:
    #                  - "yes"
    #  tolerations:
    #    - key: "it.mdev.project/e-procurement"
    #      operator: "Equal"
    #      value: "yes"
    #      effect: "NoExecute"
      imagePullSecrets:
        - name: regcred
        - name: sgmsaacr
      containers:
        - name: ec-frontend
          image: it-docker.deltaww.com/ec-frontend:20231115.025502-44b05dd
          imagePullPolicy: IfNotPresent
          resources:
     #       requests:
     #         cpu: 100m
     #         memory: 32Mi
          #  limits:
          #    cpu: 300m
          #    memory: 64Mi
          envFrom:
            - configMapRef:
                name: ec-frontend-config
          livenessProbe:  # 於運作階段檢測是否存活
            httpGet:
              path: /version.txt
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 60
          readinessProbe:  # 於運作階段檢測是否可接受流量
            httpGet:
              path: /version.txt
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
status: {}

