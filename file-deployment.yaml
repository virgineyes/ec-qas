apiVersion: v1
kind: Service
metadata:
  name: ec-file-svc
  namespace: ec-qas
  labels:
    application: ec-file
    stage: qas
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/actuator/health'
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 8080
  selector:
    application: ec-file
    stage: qas
status:
  loadBalancer: {}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ec-file-deploy
  namespace: ec-qas
  labels:
    application: ec-file
    stage: qas
spec:
  replicas: 1
  selector:
    matchLabels:
      application: ec-file
      stage: qas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        application: ec-file
        stage: qas
    spec:
     # affinity:
     #   podAntiAffinity:
     #     preferredDuringSchedulingIgnoredDuringExecution:
     #       - weight: 100
     #         podAffinityTerm:
     #           labelSelector:
     #             matchExpressions:
     #               - key: application
     #                 operator: In
     #                 values:
     #                   - ec-file
     #               - key: stage
     #                 operator: In
     #                 values:
     #                   - qas
                # https://godleon.github.io/blog/Kubernetes/k8s-Assigning-Pod-to-Nodes/
                # topologyKey 的設定用意在於，如果有多個 pod 需要分配，並指定了 topologyKey，
                # 那 scheduler 在分配時就不可以(注意! 是不可以!)將多個 pod 放到帶有相同 value 的topologyKey(Label) 的 node 上
     #           topologyKey: kubernetes.io/hostname
     #   nodeAffinity:
     #     requiredDuringSchedulingIgnoredDuringExecution:
     #       nodeSelectorTerms:
     #         - matchExpressions:
     #             - key: it.mdev.project/e-procurement
     #               operator: In
     #               values:
     #                 - "yes"
     # tolerations:
     #   - key: "it.mdev.project/e-procurement"
     #     operator: "Equal"
     #     value: "yes"
     #     effect: "NoExecute"
      imagePullSecrets:
        - name: regcred
        - name: sgmsaacr
      containers:
        - name: ec-file
          image: it-docker.deltaww.com/ec-file:20230410-134109.05c6fd4
          imagePullPolicy: IfNotPresent
          resources:
     #       requests:
     #         cpu: 500m
     #         memory: 1Gi
          #  limits:
          #    cpu: 500m
          #    memory: 1Gi
          envFrom:
            - configMapRef:
                name: ec-common-config
            - configMapRef:
                name: ec-file-config
          livenessProbe:  # 於運作階段檢測是否存活
            httpGet:
              path: /actuator/info
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
          readinessProbe:  # 於運作階段檢測是否可接受流量
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
          volumeMounts:
          - name: varlog
            mountPath: /var/log
        - name: filebeat-dynamic
          image: it-docker.deltaww.com/docker.elastic.co/beats/filebeat:7.6.1
          imagePullPolicy: Always
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: varlog
            mountPath: /var/log
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: filebeat-dynamic-config
        - name: varlog
          emptyDir: {}
status: {}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-dynamic-config
  namespace: ec-qas
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /var/log/*.log
    processors:
    - add_fields:
        target: kubernetes
        fields:
          pod.name: ${POD_NAME}
          namespace: ${POD_NAMESPACE}

    #filebeat.publish_async: true
    #ignore_older: 12h

    filebeat.config.modules:
      path: ${path.config}/modules.d/*.yml
      reload.enabled: false

    setup.ilm.enabled: false

    # setup filebeat to send output to elasticsearch
    output.elasticsearch:
      enabled: true
      hosts: ["http://it-elk-stg.deltaww.com:80"]
    # output.logstash:
    #  enabled: true
    #  hosts: ["10.136.218.31:2060"]
